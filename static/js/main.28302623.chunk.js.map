{"version":3,"sources":["components/Filter/Filter.module.scss","components/App/App.module.scss","services/api.js","redux/contacts/contactsOperation.js","redux/contacts/contactsSlice.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","BASE_URL","process","fetchData","path","a","options","fetch","res","ok","json","Promise","reject","Error","statusText","API_ENDPOINT","getContacts","createAsyncThunk","addContact","newCity","endpoint","item","finalOptions","method","body","JSON","stringify","headers","api","deleteContact","id","conatactsSlice","createSlice","name","initialState","items","filter","reducers","chengeFilter","state","action","payload","extraReducers","builder","addCase","fulfilled","idx","findIndex","contact","splice","actions","ContactForm","onSubmit","useState","setName","number","setNumber","hendleChange","key","value","e","preventDefault","className","s","form","label","label__input","onChange","target","type","pattern","title","required","ContactList","filterContactsList","onClickDel","contacts__list","map","phone","contacts__item","contacts__text","onClick","Filter","onChangeValue","filter__search","filter__input","App","contacts","useSelector","dispatch","useDispatch","useEffect","filterResult","normalizeFilter","toLowerCase","includes","filteredContact","container","newName","some","alert","contactsActions","store","configureStore","reducer","conatactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28302623.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2_GWH\",\"filter__search\":\"Filter_filter__search__1FUD6\",\"filter__input\":\"Filter_filter__input__2m9U9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__iR34h\",\"title\":\"App_title__18Wec\"};","const BASE_URL = process.env.REACT_APP_URL;\r\n\r\nconst fetchData = async (path, options = {}) => {\r\n  const res = await fetch(`${BASE_URL}/${path}`, options);\r\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\r\n};\r\n\r\nconst getData = (endpoint, options) => fetchData(endpoint, options);\r\n\r\nconst saveItem = (endpoint, item, options = {}) => {\r\n  const finalOptions = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(item),\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n    },\r\n    ...options,\r\n  };\r\n  return fetchData(endpoint, finalOptions);\r\n};\r\n\r\nconst deleteItem = (endpoint, id, options = {}) =>\r\n  fetchData(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\r\n\r\nexport { getData, saveItem, deleteItem };\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as api from \"../../services/api\";\r\n\r\nconst API_ENDPOINT = \"contacts\";\r\n\r\nconst getContacts = createAsyncThunk(\"contacts/getContactsStatus\", () =>\r\n  api.getData(API_ENDPOINT)\r\n);\r\n\r\nconst addContact = createAsyncThunk(\"contacts/addContactStatus\", (newCity) =>\r\n  api.saveItem(API_ENDPOINT, newCity)\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\"contacts/deleteContactStatus\", (id) =>\r\n  api.deleteItem(API_ENDPOINT, id)\r\n);\r\n\r\nexport { getContacts, addContact, deleteContact };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getContacts, addContact, deleteContact } from \"./contactsOperation\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst conatactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState,\r\n  reducers: {\r\n    chengeFilter: (state, action) => ({ ...state, filter: action.payload }),\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getContacts.fulfilled, (state, { payload }) => {\r\n        state.items = payload;\r\n      })\r\n      .addCase(addContact.fulfilled, (state, action) => ({\r\n        ...state,\r\n        items: [action.payload, ...state.items],\r\n      }))\r\n      .addCase(deleteContact.fulfilled, (state, { payload }) => {\r\n        const idx = state.items.findIndex(\r\n          (contact) => contact.id === payload.id\r\n        );\r\n        state.items.splice(idx, 1);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { chengeFilter } = conatactsSlice.actions;\r\n\r\nexport default conatactsSlice.reducer;\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const hendleChange = (key, value) => {\r\n    if (key === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (key === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.label__input}\r\n          onChange={(e) => hendleChange(e.target.name, e.target.value)}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.label__input}\r\n          onChange={(e) => hendleChange(e.target.name, e.target.value)}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"btn\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = ({ filterContactsList, onClickDel }) => {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {filterContactsList.map(({ name, phone, id }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <p className={s.contacts__text}>\r\n            {name}: <span>{phone}</span>\r\n          </p>\r\n          <button className=\"btn\" onClick={() => onClickDel(id)} type=\"button\">\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContactsList: PropTypes.array,\r\n  onClickDel: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ onChangeValue, filter }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.filter__search}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter__input}\r\n          onChange={onChangeValue}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeValue: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as contactsActions from \"../../redux/contacts/contactsSlice\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nimport s from \"./App.module.scss\";\r\nimport {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contactsOperation\";\r\n\r\nconst App = () => {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  const onSubmitName = ({ name, number }) => {\r\n    const newName = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const compareContact = contacts.some(\r\n      (contact) => contact.name?.toLowerCase() === newName.name.toLowerCase()\r\n    );\r\n    if (compareContact) {\r\n      return alert(`${name} is alredy in contacts`);\r\n    }\r\n\r\n    dispatch(addContact(newName));\r\n  };\r\n\r\n  const filteredContact = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name?.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  const filterResult = filteredContact();\r\n\r\n  const onFilterValueChange = (e) =>\r\n    dispatch(contactsActions.chengeFilter(e.target.value));\r\n\r\n  const deleteContactByID = (id) => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <div className={s.container}>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n\r\n          <ContactForm onSubmit={onSubmitName} />\r\n\r\n          <h2 className={s.title}>Contacts</h2>\r\n\r\n          <Filter onChangeValue={onFilterValueChange} filter={filter} />\r\n\r\n          <ContactList\r\n            filterContactsList={filterResult}\r\n            onClickDel={deleteContactByID}\r\n          />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport conatactsReducer from \"./contacts/contactsSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: conatactsReducer,\r\n  },\r\n});\r\n\r\nexport { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2sHN_\",\"label\":\"ContactForm_label__yeusj\",\"label__input\":\"ContactForm_label__input____Sce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__3wgJs\",\"contacts__item\":\"ContactList_contacts__item__1bwTU\",\"contacts__text\":\"ContactList_contacts__text__1ZCfS\"};"],"sourceRoot":""}